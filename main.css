body {
    margin: 0;
}

textarea {
    resize: none;
}

#newCompBtn {
    margin: 5px;
}

.compCont {
    width: 99%;
    min-height: 95vh;
    margin: 5px;
    display: grid;
    grid-template-columns: repeat(4, 65px);
    grid-template-rows: 22px;
    grid-template-areas:
        "delBtn  compBtn expBtn  binBtn  simContainer"
        "srcText srcText srcText srcText simContainer"
}
.compCont.showBin {
    grid-template-columns: repeat(4, 65px) 160px;
    grid-template-areas: 
        "delBtn  compBtn expBtn  binBtn  .       simContainer"
        "srcText srcText srcText srcText binText simContainer"
}

.compBtn {
    grid-area: compBtn;
}
.expBtn {
    grid-area: expBtn;
}
.binBtn {
    grid-area: binBtn;
}
.srcText {
    grid-area: srcText;
}
.binText {
    grid-area: binText;
    display: none;
}
.compCont.showBin .binText {
    display: initial;
}
.simContainer {
    grid-area: simContainer;
    margin-left: 5px;
}



.simCont {
    height: 100%;
    display: grid;
    grid-template-columns: 280px 130px 180px 85px 1fr;
    grid-template-rows: min-content auto;
    grid-template-areas:
        "contr contr contr contr contr"
        "pmem regs dmem stack mods"
        "pmem regs dmem stack mods";
}


.controls {
    grid-area: contr;
}
.pmemOuter {
    grid-area: pmem;
}
.dmemOuter {
    grid-area: dmem;
}
.regOuter {
    grid-area: regs;
}
.stackOuter {
    grid-area: stack;
}
.simModOuter {
    grid-area: mods;
}

.tHeader {
    text-align: center;
}


.tCont > div {
    border: 1px solid darkgray;
}

.tCont > div > * {
    display: inline-block;
    margin-left: 1ch;
    margin-right: 1ch;
}

.tOuter {
    display: inline-block;
    background-color: lightgray;
}

.tOuter > *:first-child {
    text-align: center;
}

.tCont {
    display: grid;
    grid-template-rows: repeat(32, 1fr);
    grid-auto-flow: column;
}

.active {
    background-color: lightcoral;
}


.tCont.pmem {
    grid-auto-flow: row;
    overflow-y: auto;
    height: 0;
    min-height: calc(100% - 20px);
    grid-template-rows: repeat(4096, 1fr);
}
.pmem > div > *:nth-child(2) {
    width: 100px;
}

.pmem input[type='checkbox'] {
    cursor: pointer;
    appearance: none;
    height: 0.7em;
    width: 0.7em;
    border-radius: 50%;
    margin: auto 1ch auto 1ch;
}

.pmem input[type='checkbox']:hover {
    background-color: darkgray;
}

.pmem input[type='checkbox']:checked {
    background-color: red;
}

.pmem > .dmemempty {
    background-color: beige;
    text-align: center;
}

.dmem.tCont {
    grid-template-columns: 1fr 1fr;
}

.stack > div {
    visibility: hidden;
}


.modOuter {
    background-color: beige;
}

.modOuter > div:first-child
{
    width: 100%;
    display: grid;
    grid-template-columns: 1fr 25px;
}

.modOuter .modSel {
    grid-column: span 3;
    display: grid;
    grid-template-columns: 1fr;
}

.modOuter .modSel > div {
    display: grid;
    grid-template-columns: 4fr 1fr 1fr;
}

.modOuter input[type='text'] {
    min-width: 0;
}

.modsCont {
    display: grid;
    grid-template-columns: repeat(auto-fit, 250px);
    grid-auto-flow: row dense;
    grid-auto-rows: 100px;
}

.modOuter {
    margin: 5px;
    grid-column: span var(--spanX);
    grid-row: span var(--spanY);
}

.modOuter .modSel > div.intEnLine {
    grid-template-columns: 20px auto;
}
